[
  {
    "name": "encrypt",
    "filePath": "src/core.js",
    "lines": [
      {
        "lineNumber": 40,
        "line": "/**"
      },
      {
        "lineNumber": 41,
        "line": " * Basic encryption API that enables signing simultaneously with encrypting message."
      },
      {
        "lineNumber": 42,
        "line": " * @param message"
      },
      {
        "lineNumber": 43,
        "line": " * @param keys"
      },
      {
        "lineNumber": 44,
        "line": " * @param config"
      },
      {
        "lineNumber": 45,
        "line": " * @return {Promise<{success: boolean, status: string, data: any}>}"
      },
      {
        "lineNumber": 46,
        "line": " */"
      },
      {
        "lineNumber": 47,
        "line": "export const encrypt = async ({message, keys, config}) => {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "message",
      "keys",
      "config"
    ]
  },
  {
    "name": "decrypt",
    "filePath": "src/core.js",
    "lines": [
      {
        "lineNumber": 76,
        "line": "/**"
      },
      {
        "lineNumber": 77,
        "line": " * Decrypt given message and additionally verify attached signatures simultaneously."
      },
      {
        "lineNumber": 78,
        "line": " * @param data"
      },
      {
        "lineNumber": 79,
        "line": " * @param keys"
      },
      {
        "lineNumber": 80,
        "line": " * @return {Promise<*>}"
      },
      {
        "lineNumber": 81,
        "line": " */"
      },
      {
        "lineNumber": 82,
        "line": "export const decrypt = async ({data, keys}) => {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "data",
      "keys"
    ]
  },
  {
    "name": "sign",
    "filePath": "src/core.js",
    "lines": [
      {
        "lineNumber": 109,
        "line": "/**"
      },
      {
        "lineNumber": 110,
        "line": " * Returns the signature objects."
      },
      {
        "lineNumber": 111,
        "line": " * @param message"
      },
      {
        "lineNumber": 112,
        "line": " * @param keys"
      },
      {
        "lineNumber": 113,
        "line": " * @param config"
      },
      {
        "lineNumber": 114,
        "line": " * @return {Promise<{success: boolean, status: string, data}>}"
      },
      {
        "lineNumber": 115,
        "line": " */"
      },
      {
        "lineNumber": 116,
        "line": "export const sign = async ({message, keys, config}) => {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "message",
      "keys",
      "config"
    ]
  },
  {
    "name": "verify",
    "filePath": "src/core.js",
    "lines": [
      {
        "lineNumber": 134,
        "line": "/**"
      },
      {
        "lineNumber": 135,
        "line": " * Returns verification result"
      },
      {
        "lineNumber": 136,
        "line": " * @param message"
      },
      {
        "lineNumber": 137,
        "line": " * @param signature"
      },
      {
        "lineNumber": 138,
        "line": " * @param keys"
      },
      {
        "lineNumber": 139,
        "line": " * @return {Promise<*>}"
      },
      {
        "lineNumber": 140,
        "line": " */"
      },
      {
        "lineNumber": 141,
        "line": "export const verify = async ({message, signature, keys}) => {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "message",
      "signature",
      "keys"
    ]
  },
  {
    "name": "importKeys",
    "filePath": "src/keys.js",
    "lines": [
      {
        "lineNumber": 62,
        "line": "/**"
      },
      {
        "lineNumber": 63,
        "line": " * Functions to import keys and translate them to suite-specific key objects."
      },
      {
        "lineNumber": 64,
        "line": " * @param format"
      },
      {
        "lineNumber": 65,
        "line": " * @param keys"
      },
      {
        "lineNumber": 66,
        "line": " * @param suite"
      },
      {
        "lineNumber": 67,
        "line": " * @param mode"
      },
      {
        "lineNumber": 68,
        "line": " * @return {Promise<Keys>}"
      },
      {
        "lineNumber": 69,
        "line": " */"
      },
      {
        "lineNumber": 70,
        "line": "export const importKeys = async (format='string', {keys, suite, mode}) => {"
      }
    ],
    "codeParams": [
      "format",
      "*"
    ],
    "docParams": [
      "format",
      "keys",
      "suite",
      "mode"
    ]
  },
  {
    "name": "importKeyStrings",
    "filePath": "src/keys.js",
    "lines": [
      {
        "lineNumber": 82,
        "line": "/**"
      },
      {
        "lineNumber": 83,
        "line": " * import from keystring, i.e., pem"
      },
      {
        "lineNumber": 84,
        "line": " * @param keys"
      },
      {
        "lineNumber": 85,
        "line": " * @param suite"
      },
      {
        "lineNumber": 86,
        "line": " * @param mode"
      },
      {
        "lineNumber": 87,
        "line": " * @return {Promise<{keys, suite: *, mode: *}>}"
      },
      {
        "lineNumber": 88,
        "line": " */"
      },
      {
        "lineNumber": 89,
        "line": "const importKeyStrings = async ({keys, suite, mode}) => {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "keys",
      "suite",
      "mode"
    ]
  },
  {
    "name": "importKeyObjects",
    "filePath": "src/keys.js",
    "lines": [
      {
        "lineNumber": 123,
        "line": "/**"
      },
      {
        "lineNumber": 124,
        "line": " * just import from key object"
      },
      {
        "lineNumber": 125,
        "line": " * @param keys"
      },
      {
        "lineNumber": 126,
        "line": " * @param suite"
      },
      {
        "lineNumber": 127,
        "line": " * @param mode"
      },
      {
        "lineNumber": 128,
        "line": " * @return {Promise<{keys, suite: *, mode: *}>}"
      },
      {
        "lineNumber": 129,
        "line": " */"
      },
      {
        "lineNumber": 130,
        "line": "const importKeyObjects = async ({keys, suite, mode}) => {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "keys",
      "suite",
      "mode"
    ]
  },
  {
    "name": "Jscu.generateKey",
    "filePath": "src/suite_jscu.js",
    "lines": [
      {
        "lineNumber": 12,
        "line": "  /**"
      },
      {
        "lineNumber": 13,
        "line": "   * Generate publicKeyPair or sessionKeyObject with js-crypto-utils."
      },
      {
        "lineNumber": 14,
        "line": "   * @param params {Object}"
      },
      {
        "lineNumber": 15,
        "line": "   * @param passphrase {string}"
      },
      {
        "lineNumber": 16,
        "line": "   * @param encryptOptions {Object}"
      },
      {
        "lineNumber": 17,
        "line": "   * @return {Promise<*>}"
      },
      {
        "lineNumber": 18,
        "line": "   */"
      },
      {
        "lineNumber": 19,
        "line": "  static async generateKey({params, passphrase=null, encryptOptions={}}) {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "params",
      "passphrase",
      "encryptOptions"
    ]
  },
  {
    "name": "Jscu.encrypt",
    "filePath": "src/suite_jscu.js",
    "lines": [
      {
        "lineNumber": 69,
        "line": "  /**"
      },
      {
        "lineNumber": 70,
        "line": "   * Encrypt plaintext object with given keys."
      },
      {
        "lineNumber": 71,
        "line": "   * @param message"
      },
      {
        "lineNumber": 72,
        "line": "   * @param keys"
      },
      {
        "lineNumber": 73,
        "line": "   * @param options"
      },
      {
        "lineNumber": 74,
        "line": "   * @return {Promise<{message: EncryptedMessage}>}"
      },
      {
        "lineNumber": 75,
        "line": "   */"
      },
      {
        "lineNumber": 76,
        "line": "  static async encrypt({message, keys, options}) {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "message",
      "keys",
      "options"
    ]
  },
  {
    "name": "Jscu.decrypt",
    "filePath": "src/suite_jscu.js",
    "lines": [
      {
        "lineNumber": 132,
        "line": "  /**"
      },
      {
        "lineNumber": 133,
        "line": "   * Decrypt encrypted object with given keys."
      },
      {
        "lineNumber": 134,
        "line": "   * @param encrypted"
      },
      {
        "lineNumber": 135,
        "line": "   * @param keys"
      },
      {
        "lineNumber": 136,
        "line": "   * @param options"
      },
      {
        "lineNumber": 137,
        "line": "   * @return {Promise<{data: *}>}"
      },
      {
        "lineNumber": 138,
        "line": "   */"
      },
      {
        "lineNumber": 139,
        "line": "  static async decrypt({encrypted, keys, options}) {"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "encrypted",
      "keys",
      "options"
    ]
  },
  {
    "name": "Jscu.sign",
    "filePath": "src/suite_jscu.js",
    "lines": [
      {
        "lineNumber": 206,
        "line": "  /**"
      },
      {
        "lineNumber": 207,
        "line": "   * Signing on a message with given private key's'"
      },
      {
        "lineNumber": 208,
        "line": "   * @param message"
      },
      {
        "lineNumber": 209,
        "line": "   * @param keys"
      },
      {
        "lineNumber": 210,
        "line": "   * @param options"
      },
      {
        "lineNumber": 211,
        "line": "   * @return {Promise<{signature: Signature}>}"
      },
      {
        "lineNumber": 212,
        "line": "   */"
      },
      {
        "lineNumber": 213,
        "line": "  static async sign({message, keys, options}){"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "message",
      "keys",
      "options"
    ]
  },
  {
    "name": "Jscu.verify",
    "filePath": "src/suite_jscu.js",
    "lines": [
      {
        "lineNumber": 228,
        "line": "  /**"
      },
      {
        "lineNumber": 229,
        "line": "   * Verify signature here"
      },
      {
        "lineNumber": 230,
        "line": "   * @param message"
      },
      {
        "lineNumber": 231,
        "line": "   * @param signature"
      },
      {
        "lineNumber": 232,
        "line": "   * @param keys"
      },
      {
        "lineNumber": 233,
        "line": "   * @param options"
      },
      {
        "lineNumber": 234,
        "line": "   * @return {Promise<{keyId: *, valid: *}[]>}"
      },
      {
        "lineNumber": 235,
        "line": "   */"
      },
      {
        "lineNumber": 236,
        "line": "  static async verify({message, signature, keys, options}){"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "message",
      "signature",
      "keys",
      "options"
    ]
  }
]